{"Name":"Google Plus and Play Game Services for iOS","Id":356,"Alias":"googleplusandplayios","Description":"Grow your audience across devices\n=================================\nGoogle+ Sign-In is a simple, trusted way to let people sign in with their Google credentials and build even more engaging experiences across desktop and mobile.\n\nCreate great game experiences with Google Play game services. Add achievements, leaderboards, and real-time multiplayer to your mobile and web games, and let players share their gaming experience with friends.\n\nShowing a G+ Sign In Button\n===========================\n### Setup your project settings\n\nBefore you can use Google Plus SDK and run this code, you must create an APIs Console project at [https://developers.google.com/console](https://developers.google.com/console) make sure you take note of your Bundle ID you set on Google\u0027s portal.\n\nOnce you registered and obtained a Client Id, you must set the same Bundle ID you used on Google\u0027s Portal on your Bundle Identifier inside your Info.plist.\n\nAnd one last step you need to setup an **URL Scheme** in your Info.plist, The URL scheme must be declared the same as **Your Bundle ID** (the one you used on Google\u0027s portal). In order to add this URL scheme you need to open your Info.plist \u003e Select Advanced Tab \u003e clic Add URL Type button \u003e on URL Schemes box write your url scheme \u003e save Info.plist.\n\n### AppDelegate\n\n```csharp\nusing Google.Plus;\nusing Google.OpenSource;\n//...\n\nconst string ClientId = \"\u003cGet your ID at https://developers.google.com/console\u003e\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\t// Configure the SignIn shared singleton instance by declaring \n\t// its client ID, delegate, and scopes.\n\tvar signIn = SignIn.SharedInstance;\n\tsignIn.ClientId = ClientId;\n\tsignIn.Scopes = new [] { PlusConstants.AuthScopePlusLogin, PlusConstants.AuthScopePlusMe };\n\tsignIn.ShouldFetchGoogleUserEmail = true;\n\t//...\n}\n\npublic override bool OpenUrl (UIApplication application, NSUrl url, string sourceApplication, NSObject annotation)\n{\n\t// This handler will properly handle the URL that your application \n\t// receives at the end of the authentication process.\n\treturn UrlHandler.HandleUrl (url, sourceApplication, annotation);\n}\n```\n\n### Your View Controller\n\n```csharp\nusing Google.Plus;\nusing Google.OpenSource;\n//...\n\nSignInButton btnSignIn;\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\n\t// Create the G+ SignIn button\n\tbtnSignIn = new SignInButton () {\n\t\tFrame = new RectangleF (85, 176, 151, 48)\n\t};\n\n\t// Setup event listener when user logins\n\n\tSignIn.SharedInstance.Finished += (s, e) =\u003e {\n\t\tif (e.Error != null) {\n\t\t\tInvokeOnMainThread (()=\u003e new UIAlertView (\"Error\", \"Could not sign in.\\nError: \" + e.Error.Description, null, \"Ok\", null).Show ());\n\t\t} else {\n\t\t\tInvokeOnMainThread (()=\u003e {\n\t\t\t\tnew UIAlertView (\"Success\", \"LogIn complete, your email is: \" + SignIn.SharedInstance.UserEmail, null, \"Ok\", null).Show ();\n\t\t\t\tbtnSignIn.Hidden = true;\n\t\t\t});\n\t\t}\n\t};\n\n\t// Add it to your subview\n\tView.AddSubview (btnSignIn);\n}\n\n// Add it to your subview\nView.AddSubview (btnSignIn);\n}\n```","Version":"1.3.0.1","Summary":"Create a more engaging experience and connect with more users by integrating social into your app.","QuickStart":"Showing a G+ Sign In Button\n===========================\n\n### Setup your project settings\n\nBefore you can use Google Plus SDK and run this code, you must create an APIs Console project at [https://developers.google.com/console](https://developers.google.com/console) make sure you take note of your Bundle ID you set on Google\u0027s portal.\n\nOnce you registered and obtained a Client Id, you must set the same Bundle ID you used on Google\u0027s Portal on your Bundle Identifier inside your Info.plist.\n\nAnd one last step you need to setup an **URL Scheme** in your Info.plist, The URL scheme must be declared the same as **Your Bundle ID** (the one you used on Google\u0027s portal). In order to add this URL scheme you need to open your Info.plist \u003e Select Advanced Tab \u003e clic Add URL Type button \u003e on URL Schemes box write your url scheme \u003e save Info.plist.\n\n### AppDelegate\n\n```csharp\nusing Google.Plus;\nusing Google.OpenSource;\n//...\n\nconst string ClientId = \"\u003cGet your ID at https://developers.google.com/console\u003e\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\t// Configure the SignIn shared singleton instance by declaring \n\t// its client ID, delegate, and scopes.\n\tvar signIn = SignIn.SharedInstance;\n\tsignIn.ClientId = ClientId;\n\tsignIn.Scopes = new [] { PlusConstants.AuthScopePlusLogin, PlusConstants.AuthScopePlusMe };\n\tsignIn.ShouldFetchGoogleUserEmail = true;\n\t//...\n}\n\npublic override bool OpenUrl (UIApplication application, NSUrl url, string sourceApplication, NSObject annotation)\n{\n\t// This handler will properly handle the URL that your application \n\t// receives at the end of the authentication process.\n\treturn UrlHandler.HandleUrl (url, sourceApplication, annotation);\n}\n```\n\n### Your View Controller\n\n```csharp\nusing Google.Plus;\nusing Google.OpenSource;\n//...\n\nSignInButton btnSignIn;\n\npublic override void ViewDidLoad ()\n{\n\tbase.ViewDidLoad ();\n\n\t// Create the G+ SignIn button\n\tbtnSignIn = new SignInButton () {\n\t\tFrame = new RectangleF (85, 176, 151, 48)\n\t};\n\n\t// Setup event listener when user logins\n\n\tSignIn.SharedInstance.Finished += (s, e) =\u003e {\n\t\tif (e.Error != null) {\n\t\t\tInvokeOnMainThread (()=\u003e new UIAlertView (\"Error\", \"Could not sign in.\\nError: \" + e.Error.Description, null, \"Ok\", null).Show ());\n\t\t} else {\n\t\t\tInvokeOnMainThread (()=\u003e {\n\t\t\t\tnew UIAlertView (\"Success\", \"LogIn complete, your email is: \" + SignIn.SharedInstance.UserEmail, null, \"Ok\", null).Show ();\n\t\t\t\tbtnSignIn.Hidden = true;\n\t\t\t});\n\t\t}\n\t};\n\n\t// Add it to your subview\n\tView.AddSubview (btnSignIn);\n}\n```\n## Documentation\n\n* Google+ Platform for iOS: [https://developers.google.com/+/mobile/ios/](https://developers.google.com/+/mobile/ios/)\n* Getting Started: [https://developers.google.com/+/mobile/ios/getting-started](https://developers.google.com/+/mobile/ios/getting-started)\n* API Reference: [https://developers.google.com/+/mobile/ios/api/](https://developers.google.com/+/mobile/ios/api/)\n* Google Play Game Services: [https://developers.google.com/games/services/](https://developers.google.com/games/services/)","Hash":"2cafc52eec167d71b77857552e21637b","TargetPlatforms":["ios"],"TrialHash":null}